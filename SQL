Q1 create view for successful bookings
Create view Successful_Bookings as
select * from bookings
where Booking_Status = "Success";

Q2. Find the average ride distance for each vehicle type:
Create view ride_distance_for_each_vehicle as
select Vehicle_Type, AVG(Ride_Distance)
as avg_distance from bookings
Group By Vehicle_type;
 
Q3. Get the total number of canceled rides by customers:
Create view cancelled_rides_by_customers as
select COUNT(*) from bookings where Booking_Status = "Canceled by Customer";

Q4. List the top 5 customers who booked the highest number of rides:
Create view top_5_customers as
select Customer_ID, COUNT(Booking_ID) AS total_rides
from bookings 
group by Customer_ID
ORDER BY total_rides desc LIMIT 5;

Q5. Get the number of rides cancelled by drivers due to personal and car-related issues:
Create view rides_cancelled_by_drivers_p_a_c_issues as
select count(*) from bookings
where Canceled_Rides_by_Driver = "Personal & Car related issue";


Q6. Find the maximum and minimum driver ratings for Prime Sedan bookings:
Create view max_and_min_ratings_for_prime_sedan as
select MAX(Driver_Ratings) as max_rating,
MIN(Driver_Ratings) as min_rating
from bookings where Vehicle_Type = "Prime Sedan";

Q7. Retrieve all rides where payment was made using UPI:
Create view UPI_payment as
select * from bookings
where Payment_Method = "UPI";

Q8. Find the average customer rating per vehicle type:
Create view Avg_Cust_Rating as
select Vehicle_Type, AVG(Customer_Rating) as
avg_customer_rating from bookings
GROUP BY Vehicle_Type;

Q9. Calculate the total booking value of rides completed successfully:
Create view total_successful_ride_value as
select SUM(Booking_Value) as total_successful_ride_value from bookings
where Booking_Status = "Success"; 

Q10. List all incomplete rides along with the reason:
Create view incomplete_rides_with_reason as
select Booking_ID, Incomplete_Rides_Reason from bookings
where Incomplete_Rides = "Yes";
